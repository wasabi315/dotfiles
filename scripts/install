#!/bin/bash -eu

# general utilities ------------------------------------------------------

e_newline() {
    printf "\n"
}

e_header() {
    printf " \033[37;1m%s\033[m\n" "$*"
}

e_error() {
    printf " \033[31;1m%s\033[m\n" "Error... $*"
}

e_warning() {
    printf " \033[33;1m%s\033[m\n" "$*"
}

e_done() {
    printf " \033[37;1m%s\033[m\n" "Done..."
}


# Dotfiles ---------------------------------------------------------------

if [ -z "${DOTPATH:-}" ]; then
    DOTPATH="${HOME}/.dotfiles"; export DOTPATH
fi

DOT_TARBALL="https://github.com/wasabi315/dotfiles/tarball/master"
REMOTE_URL="git@github.com:wasabi315/dotfiles.git"

dotfiles_download() {
    e_newline
    e_header "Downloading dotfiles..."

    if [ -d ${DOTPATH} ]; then
        e_error "$DOTPATH: already exists."
        exit 1
    fi

    mkdir ${DOTPATH}

    if has "git"; then
        git clone "${REMOTE_URL}" "${DOTPATH}"
    else
        wget -qO ${HOME}/dotfiles.tar.gz ${DOT_TARBALL}
        tar -xzvf ${HOME}/dotfiles.tar.gz -C ${DOTPATH}
        rm ${HOME}/dotfiles.tar.gz
    fi

    e_done
}

dotfiles_deploy() {
    e_newline
    e_header "Deploying dotfiles..."

    cd ${DOTPATH}

    make deploy

    e_newline
    e_done
}

dotfiles_initialize() {
    e_newline
    e_header "Initializing dotfiles..."

    make init

    e_newline
    e_done
}

dotfiles_install() {
    dotfiles_download &&
    dotfiles_deploy &&
    dotfiles_initialize
}

