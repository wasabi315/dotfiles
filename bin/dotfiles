#!/bin/bash -eu

# utilities -------------------------------------------------------------------

tbold="$(tput bold)"
tclose="$(tput sgr0)"
tred="$(tput setaf 1)"
tgreen="$(tput setaf 2)"
tyellow="$(tput setaf 3)"
tblue="$(tput setaf 4)"
tpurple="$(tput setaf 5)"
tcyan="$(tput setaf 6)"
tgray="$(tput setaf 7)"

e_header() {
    printf "${tbold}${tgray}$1${tclose}\n"
}

e_done() {
    printf "${tbold}${tgreen}Done${tclose}\n"
}

e_warning() {
    printf "${tbold}${tyellow}$1${tclose}"
}

e_error() {
    printf "${tbold}${tred}$1${tclose}"
}


# dotfiles --------------------------------------------------------------------

if [ -z "${DOTPATH:-}" ]; then
    DOTPATH="${HOME}/.dotfiles"; export DOTPATH
fi

if [ -z "${BACKUP_PATH:-}" ]; then
    BACKUP_PATH="${DOTPATH}/backup"; export BACKUP_PATH
fi


help() {

    local name=`basename $0`
    local backups=(${BACKUP_PATH}/*)
    local backup_info=()

    if [ -z "${backups}" ]; then
        backup_info="Nothing backed up"
    else
        backup_info="${backups[@]}"
    fi

    cat <<EOF
Usage:
  $name <command>

This dotfiles is for wasabi315's personal Ubuntu 18.04 minimal environment.

Commands:
  ${tbold}deploy${tclose}:  back up your configs and symlink dotfiles to your home directory.
           your configs backed up will locate in ${DOTPATH}/backup.

  ${tbold}init${tclose}:    install software packages.
           information for the package list: ${tbold}See https://github.com/wasabi315/dotfiles${tclose}

  ${tbold}install${tclose}: symlink dotfiles to your home directory and install software packages.

  ${tbold}update${tclose}:  update dotfiles.

  ${tbold}diff${tclose}:    show diffrences between your original setting and this dotfiles.

  ${tbold}clean${tclose}:   remove dotfiles and restore to your original settings.

  ${tbold}help${tclose}:    print help (this message).

Backed up files(dirs):
  ${backup_info[@]}

For more information see: ${tbold}https://github.com/wasabi315/dotfiles${tclose}
               Copyright: ${tbold}(c) 2018 wasabi315${tclose}
                Lincence: ${tbold}MIT${tclose}

EOF

}


deploy() {

    e_header "Deploying dotfiles..."
    ${DOTPATH}/scripts/deploy.sh
    e_done

}


init() {

    e_header "Install softwares..."
    ${DOTPATH}/scripts/init.sh
    e_done

}


install() {

    deploy &&
    init

}

diff() {

    echo "undefined: diff"

}


update() {

    e_header "Updating dotfiles..."
    git pull origin master
    e_done

}


clean() {

    echo "todo: restore original config"

    e_warning "WARNING: This will remove current dotfiles!!"
    e_warning "Continue? (y/n)"
    read -r REPLY
    if [ "$REPLY" == Y ] || [ "$REPLY" = y ]; then
        e_header "Cleaning dotfiles..."
        bash ${DOTPATH}/scripts/clean.sh
    else
        echo "abort."
        exit 1
    fi


}


if [ $# -ne 1 ]; then
    help
    exit 1
fi

command=$1

case $command in
    deploy)
        deploy
        ;;
    init)
        init
        ;;
    install)
        install
        ;;
    diff)
        diff
        ;;
    update)
        update
        ;;
    clean)
        clean
        ;;
    *)
        help
        ;;
esac

exit 0

# vim : filetype=sh
